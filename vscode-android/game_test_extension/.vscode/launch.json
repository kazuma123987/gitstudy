{
    // 使用 IntelliSense 了解相关属性。 
    // 悬停以查看现有属性的描述。
    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            // Set the name of the launch config.
            "name": "Android Launch",
        
            // Set type to `android-debug` to use this extension.
            "type": "android-debug",
        
            // Request.
            // `launch` for launching and debugging the app.
            // `attach` for attaching to already running app.
            "request": "launch",
        
            // Target device for debugging.
            // This can `select`, `last-selected` or serial of the connected android device as shown in 'adb devices'
            "target": "select",
        
            // Full path to the built APK.
            // If available this apk will be installed first to the target device.
            // At least one of `apkPath` or `packageName` is required for `launch` request.
            "apkPath": "${workspaceFolder}/app/build/outputs/apk/debug/app-debug.apk",
        
            // Package name of your app.
            // At least one of `apkPath` or `packageName` is required for `launch` request.
            "packageName": "com.example.game_test",
        
            // Specify the activity you'd want to launch for debugging
            // The activity is launched with the following command:
            // $ adb shell am start -D -a android.intent.action.MAIN -c android.intent.category.LAUNCHER ${packageName}/${launchActivity}
            // Required and only applicable for `launch` request.
            "launchActivity": ".MainActivity",
        
            // Mode for debugging. One of `java`, `native` or `dual`.
            // Defaults to `java` if not specified.
            "mode": "dual",
        
            // Resume app process after attaching native debugger in case it is waiting for debugger by attaching a dummy Java debugger.
            // Defaults to `true` for `launch` request, `false` for `attach` request.
            // Only applicable in 'native' mode.
            "resumeProcess": true,
        
            // Options for native debugging
            "native": {
                // List of supported ABIs for the app.
                // Defaults to `android-debug.abiSupported` configuration if available.
                "abiSupported": ["armeabi-v7a", "arm64-v8a", "x86", "x86_64"],
        
                // Map of ABI to custom string. To be used with ${command:mappedAbi}.
                // This can be useful if you have custom build system and the location of SO files uses custom strings for ABIs.
                // Defaults to `android-debug.abiMap` configuration if available.
                "abiMap": {
                    "armeabi-v7a": "arm",
                    "arm64-v8a": "arm64",
                    "x86": "x86",
                    "x86_64": "x64",
                },
        
                // ABI to use for the current debug session.
                // This can be set to one of the ABIs directly, or to `select` to show a picker.
                "abi": "select",
        
                // Paths where to look for the SO files used in your app.
                // You can use `${command:abi}` and `{command:mappedAbi}` when specifying the paths.
                "symbolSearchPaths": [
                    "${workspaceFolder}/app/build/intermediates/merged_native_libs/debug/mergeDebugNativeLibs/out/lib/${command:abi}/",
                ],
        
                // All other options specified here are passes as is to the underlying Native debugger. See https://github.com/vadimcn/vscode-lldb/blob/master/MANUAL.md
            },
        
            // Options for java debugging
            "java": {
                // List of source paths for your java files.
                "sourcePaths": ["${workspaceFolder}/app/src/main/java"]
        
                // All other options specified here are passes as is to the underlying Java debugger. See https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-debug
            },
            "preLaunchTask": "build"
        }
        
    ]
}